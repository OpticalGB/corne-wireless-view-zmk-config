/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | MSE |
            //                    | ALT | LWR | SPC |   | ENT | RSE  | GUI |

            bindings = <
  &kp TAB  &kp Q  &kp W     &kp E  &kp R      &kp T    &kp Y  &kp U      &kp I    &kp O     &kp P  &kp BSPC
&kp LCTRL  &kp A  &kp S     &kp D  &kp F      &kp G    &kp H  &kp J      &kp K    &kp L  &kp SEMI   &kp SQT
&kp LSHFT  &kp Z  &kp X     &kp C  &kp V      &kp B    &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH     &mo 4
                         &kp RALT  &mo 1  &kp SPACE  &kp RET  &mo 2   &kp LGUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | ESC  |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | ALT |     | SPC |   | ENT | ADJ | GUI |

            bindings = <
  &kp TAB  &kp N1  &kp N2          &kp N3            &kp N4      &kp N5          &kp N6     &kp N7           &kp N8      &kp N9         &kp N0  &kp BSPC
  &kp ESC     &kp     &kp  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT       &kp MINUS  &kp EQUAL  &kp KP_MULTIPLY   &kp TILDE  &kp BACKSLASH       &kp
&kp LSHFT     &kp     &kp             &kp               &kp         &kp  &kp UNDERSCORE   &kp PLUS     &kp KP_SLASH  &kp PERIOD       &kp PIPE       &kp
                                 &kp RALT               &kp   &kp SPACE         &kp RET      &mo 3         &kp LGUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   | LFT | DWN | UP  | RGT |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | ALT | ADJ | SPC |   | ENT |     | GUI |

            bindings = <
  &kp TAB        &kp EXCL            &kp AT          &kp HASH           &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp KP_MULTIPLY   &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp LEFT_BRACE   &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &trans   &kp LEFT  &kp DOWN           &kp UP  &kp RIGHT    &trans    &trans
&kp LSHFT   &kp LESS_THAN  &kp GREATER_THAN          &kp LPAR           &kp RPAR     &trans     &trans    &trans           &trans     &trans    &trans    &trans
                                                     &kp RALT              &mo 3  &kp SPACE    &kp RET    &trans         &kp LGUI
            >;
        };

        adjust_layer {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                &kp F7             &kp F8      &kp F9  &kp F10  &kp F11  &kp F12
   &kp  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp C_BRIGHTNESS_INC    &kp C_VOLUME_UP  &kp C_MUTE      &kp      &kp      &kp
 &mo 5           &kp           &kp           &kp           &kp           &kp  &kp C_BRIGHTNESS_DEC  &kp C_VOLUME_DOWN         &kp      &kp      &kp      &kp
                                             &kp           &kp           &kp                   &kp                &kp         &kp
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        bt_clear {
            bindings = <
    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                            &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
